name: workflow

on:
  push:
    branches:
      - main
  paths-ignore:
    - README.md

jobs:
  integration:
    name: continuous Integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2  # Updated to v2

      - name: Lint code
        run: echo "Linting Repository"

      - name: run test
        run: echo "Test complete"

  build-push-gcr:
    name: Build and Push to GCR
    needs: integration
    runs-on: ubuntu-latest
    env:
      REPOSITORY: "tts-project"
      IMAGE_NAME: "tts-project-image"
      IMAGE_TAG: "latest"
      PROJECT_ID: unified-poet-400816
      GAR_LOCATION: asia-south1
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Authenticate with Google
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Login to Artifact Registry
        uses: docker/login-action@v1
        with:
          registry: asia.gcr.io
          username: _json_key
          password: ${{ secrets.GCP_CREDENTIALS }}

      - name: Login to Artifact Registry with docker
        run: gcloud auth configure-docker "$GAR_LOCATION-docker.pkg.dev"

      - name: Docker build
        run: |
          docker build -t "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE_NAME:$IMAGE_TAG" .

      - name: Docker Push
        run: docker push "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE_NAME:$IMAGE_TAG"

  pull-and-deploy:
    name: Continuous Deployment
    needs: build-push-gcr
    runs-on: self-hosted
    env:
      REPOSITORY: "tts-project"
      IMAGE_NAME: "tts-project-image"
      IMAGE_TAG: "latest"
      PROJECT_ID: useful-theory-400815
      GAR_LOCATION: asia-south1
    steps:
      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      - name: Login to Artifact Registry
        uses: docker/login-action@v1
        with:
          registry: asia.gcr.io
          username: _json_key
          password: ${{ secrets.GCP_CREDENTIALS }}

      - name: Login to Artifact Registry with docker
        run: gcloud auth configure-docker "$GAR_LOCATION-docker.pkg.dev"

      - name: Authenticate to Artifact Registry
        run: |
          gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin "$GAR_LOCATION-docker.pkg.dev"

      - name: Docker Pull
        run: docker pull "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE_NAME:$IMAGE_TAG"

      - name: Run Image
        run: |
          docker run -d -p 80:5000 "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE_NAME:$IMAGE_TAG"

      - name: Docker System Prune to Remove Old Images
        run: docker system prune -f
